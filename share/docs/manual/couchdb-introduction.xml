<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                         'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % every.entities SYSTEM "entities.ent">
%every.entities;
]>
<chapter id="couchdb-single-introduction">

  <title>Introduction</title>

  <para>
    There are two interfaces to CouchDB, the built-in
    Futon web-based interface and the CouchDB API accessed through the
    HTTP REST interface. The former is the simplest way to view and
    monitor your CouchDB installation and perform a
    number of basic database and system operations. More information on
    using the Futon interface can be found in
    <xref linkend="couchdb-single-introduction-futon"/>.
  </para>

  <para>
    The primary way to interact with the CouchDB API is to use a client
    library or other interface that provides access to the underlying
    functionality through your chosen language or platform. However,
    since the API is supported through HTTP REST, you can interact with
    your CouchDB with any solution that supports the
    HTTP protocol.
  </para>

  <para>
    There are a number of different tools that talk the HTTP protocol
    and allow you to set and configure the necessary information. One
    tool for this that allows for access from the command-line is
    <command>curl</command>. See
    <xref
        linkend="couchdb-single-introduction-curl"/>.
  </para>

  <section id="couchdb-single-introduction-futon">

    <title>Using Futon</title>

    <para>
      Futon is a native web-based interface built into CouchDB. It provides a basic interface to the majority of the
      functionality, including the ability to create, update, delete and
      view documents and views, provides access to the configuration
      parameters, and an interface for initiating replication.
    </para>

    <para>
      The default view is the <guilabel>Overview</guilabel> page which
      provides you with a list of the databases. The basic structure of
      the page is consistent regardless of the section you are in. The
      main panel on the left provides the main interface to the
      databases, configuration or replication systems. The side panel on
      the right provides navigation to the main areas of Futon
      interface:
    </para>

    <figure id="fig-ccouchdb-single-introduction-futon-overview">

      <title>Futon Overview</title>

      <mediaobject>

        <imageobject>

          <imagedata width="100%" contentdepth="100%" scalefit="1" 
fileref="images/futon-overview.png"
format="PNG" lang="en"/>

        </imageobject>

        <textobject>

          <phrase lang="en">Futon Overview</phrase>

        </textobject>

      </mediaobject>

    </figure>

    <para>
      The main sections are:
    </para>

    <itemizedlist>

      <listitem>
        <para>
          <guibutton>Overview</guibutton>
        </para>

        <para>
          The main overview page, which provides a list of the databases
          and provides the interface for querying the database and
          creating and updating documents. See
          <xref
            linkend="couchdb-single-introduction-futon-dbdocs"/>.
        </para>
      </listitem>

      <listitem>
        <para>
          <guibutton>Configuration</guibutton>
        </para>

        <para>
          An interface into the configuration of your CouchDB installation. The interface allows you to edit the
          different configurable parameters. For more details on
          configuration, see
          <xref
            linkend="couchdb-single-configuration"/>.
        </para>
      </listitem>

      <listitem>
        <para>
          <guibutton>Replicator</guibutton>
        </para>

        <para>
          An interface to the replication system, enabling you to
          initiate replication between local and remote databases. See
          <xref
            linkend="couchdb-single-introduction-futon-replication"/>.
        </para>
      </listitem>

      <listitem>
        <para>
          <guibutton>Status</guibutton>
        </para>

        <para>
          Displays a list of the running background tasks on the server.
          Background tasks include view index building, compaction and
          replication. The <guibutton>Status</guibutton> page is an
          interface to the
          <link linkend="couchdb-api-misc_active-tasks_get">Active
          Tasks</link> API call. See
          <xref
            linkend="couchdb-api-misc_active-tasks_get"/>.
        </para>
      </listitem>

      <listitem>
        <para>
          <guibutton>Verify Installation</guibutton>
        </para>

        <para>
          The <guibutton>Verify Installation</guibutton> allows you to
          check whether all of the components of your CouchDB installation are correctly installed.
        </para>
      </listitem>

      <listitem>
        <para>
          <guibutton>Test Suite</guibutton>
        </para>

        <para>
          The <guibutton>Test Suite</guibutton> section allows you to
          run the built-in test suite. This executes a number of test
          routines entirely within your browser to test the API and
          functionality of your CouchDB installation. If
          you select this page, you can run the tests by using the
          <guibutton>Run All</guibutton> button. This will execute all
          the tests, which may take some time.
        </para>
      </listitem>

    </itemizedlist>

    <section id="couchdb-single-introduction-futon-dbdocs">

      <title>Managing Databases and Documents</title>

      <para>
        You can manage databases and documents within Futon using the
        main <guibutton>Overview</guibutton> section of the Futon
        interface.
      </para>

      <para>
        To create a new database, click the <guibutton>Create Database
        &ellipsis;</guibutton> button. You will be prompted for the
        database name, as shown in the figure below.
      </para>

      <figure id="fig-ccouchdb-single-introduction-futon-dbdocs-createdb">

        <title>Creating a Database</title>

        <mediaobject>

          <imageobject>

            <imagedata width="100%" contentdepth="100%" scalefit="1" 
fileref="images/futon-createdb.png"
format="PNG" lang="en"/>

          </imageobject>

          <textobject>

            <phrase lang="en">Creating a Database</phrase>

          </textobject>

        </mediaobject>

      </figure>

      <para>
        Once you have created the database (or selected an existing
        one), you will be shown a list of the current documents. If you
        create a new document, or select an existing document, you will
        be presented with the edit document display.
      </para>

      <para>
        Editing documents within Futon requires selecting the document
        and then editing (and setting) the fields for the document
        individually before saving the document back into the database.
      </para>

      <para>
        For example, the figure below shows the editor for a single
        document, a newly created document with a single ID, the
        document <literal>_id</literal> field.
      </para>

      <figure id="fig-ccouchdb-single-introduction-futon-dbdocs-editdoc">

        <title>Editing a Document</title>

        <mediaobject>

          <imageobject>

            <imagedata width="100%" contentdepth="100%" scalefit="1" 
fileref="images/futon-editdoc.png"
format="PNG" lang="en"/>

          </imageobject>

          <textobject>

            <phrase lang="en">Editing a Document</phrase>

          </textobject>

        </mediaobject>

      </figure>

      <para>
        To add a field to the document:
      </para>

      <orderedlist>

        <listitem>
          <para>
            Click <guibutton>Add Field</guibutton>.
          </para>
        </listitem>

        <listitem>
          <para>
            In the fieldname box, enter the name of the field you want
            to create. For example, <quote>company</quote>.
          </para>
        </listitem>

        <listitem>
          <para>
            Click the green tick next to the field name to confirm the
            field name change.
          </para>
        </listitem>

        <listitem>
          <para>
            Double-click the corresponding <guilabel>Value</guilabel>
            cell.
          </para>
        </listitem>

        <listitem>
          <para>
            Enter a company name, for example <quote>Example</quote>.
          </para>
        </listitem>

        <listitem>
          <para>
            Click the green tick next to the field value to confirm the
            field value.
          </para>
        </listitem>

        <listitem>
          <para>
            The document is still not saved as this point. You must
            explicitly save the document by clicking the <guibutton>Save
            Document</guibutton> button at the top of the page. This
            will save the document, and then display the new document
            with the saved revision information (the
            <literal>_rev</literal> field).
          </para>

          <figure
                    id="fig-ccouchdb-single-introduction-futon-dbdocs-finaldoc">

            <title>Edited Document</title>

            <mediaobject>

              <imageobject>

                <imagedata width="100%" contentdepth="100%" scalefit="1" 
fileref="images/futon-editeddoc.png"
format="PNG" lang="en"/>

              </imageobject>

              <textobject>

                <phrase lang="en">Edited Document</phrase>

              </textobject>

            </mediaobject>

          </figure>
        </listitem>

      </orderedlist>

      <para>
        The same basic interface is used for all editng operations
        within Futon. You <emphasis>must</emphasis> rememmbr to save the
        individual element (fieldname, value) using the green tick
        button, before then saving the document.
      </para>

    </section>

    <section id="couchdb-single-introduction-futon-replication">

      <title>Configuring Replication</title>

      <para>
        When you click the <guibutton>Replicator</guibutton> option
        within the <guilabel>Tools</guilabel> menu you are presented
        with the Replicator screen. This allows you to start replication
        between two databases by filling in or select the appropriate
        options within the form provided.
      </para>

      <figure
            id="fig-ccouchdb-single-introduction-futon-replication-form">

        <title>Replication Form</title>

        <mediaobject>

          <imageobject>

            <imagedata width="100%" contentdepth="100%" scalefit="1" 
fileref="images/futon-replform.png"
format="PNG" lang="en"/>

          </imageobject>

          <textobject>

            <phrase lang="en">Replication Form</phrase>

          </textobject>

        </mediaobject>

      </figure>

      <para>
        To start a replication process, either the select the local
        database or enter a remote database name into the corresponding
        areas of the form. Replication occurs from the database on the
        left to the database on the right.
      </para>

      <para>
        If you are specifying a remote database name, you must specify
        the full URL of the remote database (including the host, port
        number and database name). If the remote instance requires
        authentication, you can specify the username and password as
        part of the URL, for example
        <literal>http://username:pass@remotehost:5984/demo</literal>.
      </para>

      <para>
        To enable continuous replication, click the
        <guilabel>Continuous</guilabel> checkbox.
      </para>

      <para>
        To start the replication process, click the
        <guibutton>Replicate</guibutton> button. The replication process
        should start and will continue in the background. If the
        replication process will take a long time, you can monitor the
        status of the replication using the
        <guibutton>Status</guibutton> option under the
        <guilabel>Tools</guilabel> menu.
      </para>

      <para>
        Once replication has been completed, the page will show the
        information returned when the replication process completes by
        the API.
      </para>

      <para>
        The <guilabel>Replicator</guilabel> tool is an interface to the
        underlying replication API. For more information, see
        <xref
            linkend="couchdb-api-misc_replicate_post"/>.
        For more information on replication, see
        <xref linkend="couchdb-single-replication"/>.
      </para>

    </section>

  </section>

  <section id="couchdb-single-introduction-curl">

    <title>Using <command>curl</command></title>

    <para>
      The <command>curl</command> utility is a command line tool
      available on Unix, Linux, Mac OS X and Windows and many other
      platforms. <command>curl</command> provides easy access to the
      HTTP protocol (among others) directly from the command-line and is
      therefore an ideal way of interacting with CouchDB
      over the HTTP REST API.
    </para>

    <para>
      For simple <literal>GET</literal> requests you can supply the URL
      of the request. For example, to get the database information:
    </para>

<programlisting>
shell&gt; <userinput>curl http://127.0.0.1:5984</userinput>
</programlisting>

    <para>
      This returns the database information (formatted in the output
      below for clarity):
    </para>

<programlisting>
{
   "modules" : {
      "geocouch" : "7fd793c10f3aa667a1088a937398bc5b51472b7f"
   },
   "couchdb" : "Welcome",
   "version" : "1.1.0",
}
</programlisting>

    <note>
      <para>
        For some URLs, especially those that include special characters
        such as ampersand, exclamation mark, or question mark, you
        should quote the URL you are specifying on the command line. For
        example:
      </para>

<programlisting>
shell&gt; <userinput>curl 'http://couchdb:5984/_uuids?count=5'</userinput>
</programlisting>
    </note>

    <para>
      You can explicitly set the HTTP command using the
      <option>-X</option> command line option. For example, when
      creating a database, you set the name of the database in the URL
      you send using a PUT request:
    </para>

<programlisting>
shell&gt; <userinput>curl -X PUT http://127.0.0.1:5984/demo</userinput>
{"ok":true}
</programlisting>

    <para>
      But to obtain the database information you use a
      <literal>GET</literal> request (with the return information
      formatted for clarity):
    </para>

<programlisting>
shell&gt; <userinput>curl -X GET http://127.0.0.1:5984/demo</userinput>
{
   "compact_running" : false,
   "doc_count" : 0,
   "db_name" : "demo",
   "purge_seq" : 0,
   "committed_update_seq" : 0,
   "doc_del_count" : 0,
   "disk_format_version" : 5,
   "update_seq" : 0,
   "instance_start_time" : "1306421773496000",
   "disk_size" : 79
}
</programlisting>

    <para>
      For certain operations, you must specify the content type of
      request, which you do by specifying the
      <literal>Content-Type</literal> header using the
      <option>-H</option> command-line option:
    </para>

<programlisting>
shell&gt; <userinput>curl -H 'Content-type: application/json' http://127.0.0.1:5984/_uuids</userinput>
</programlisting>

    <para>
      You can also submit 'payload' data, that is, data in the body of
      the HTTP request using the <option>-d</option> option. This is
      useful if you need to submit JSON structures, for example document
      data, as part of the request. For example, to submit a simple
      document to the <literal>demo</literal> database:
    </para>

<programlisting>
shell&gt; <userinput>curl -H 'Content-type: application/json' \
     -X POST http://127.0.0.1:5984/demo \
     -d '{"company": "Example, Inc."}'</userinput>
{"ok":true,"id":"8843faaf0b831d364278331bc3001bd8",
 "rev":"1-33b9fbce46930280dab37d672bbc8bb9"}
</programlisting>

    <para>
      In the above example, the argument after the <option>-d</option>
      option is the JSON of the document we want to submit.
    </para>

    <para>
      The document can be accessed by using the automatically generated
      document ID that was returned:
    </para>

<programlisting>
shell&gt; <userinput>curl -X GET http://127.0.0.1:5984/demo/8843faaf0b831d364278331bc3001bd8</userinput>
{"_id":"8843faaf0b831d364278331bc3001bd8",
 "_rev":"1-33b9fbce46930280dab37d672bbc8bb9",
 "company":"Example, Inc."}
</programlisting>

    <para>
      The API samples in the <xref linkend="couchdb-api-basics"/> show
      the HTTP command, URL and any payload information that needs to be
      submitted (and the expected return value). All of these examples
      can be reproduced using <command>curl</command> with the
      command-line examples shown above.
    </para>

  </section>

</chapter>
